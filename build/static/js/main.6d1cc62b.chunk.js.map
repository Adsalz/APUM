{"version":3,"sources":["firebase.js","services/userService.js","services/authService.js","components/Login.js","services/planningService.js","components/ChangePassword.js","components/DashboardMedecin.js","components/DashboardAdmin.js","components/MultiSelect.js","components/FormulaireDesirata.js","components/GestionUtilisateurs.js","utils/planningGenerator.js","components/GestionPlanning.js","components/GestionPeriodeSaisie.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","USERS_COLLECTION","getUser","async","userDoc","getDoc","doc","uid","exists","console","log","data","id","error","getAllUsers","user","currentUser","Error","getDocs","collection","docs","map","logoutUser","signOut","Login","email","setEmail","useState","password","setPassword","setError","history","useHistory","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","userCredential","signInWithEmailAndPassword","userDetails","role","loginUser","push","message","htmlFor","type","value","onChange","target","required","DESIDERATA_COLLECTION","PLANNING_COLLECTION","PERIODE_SAISIE_DOC","convertToTimestamp","dateString","Timestamp","date","Date","fromDate","convertFromTimestamp","timestamp","toDate","toISOString","deleteObsoleteDesiderata","newStartDate","newEndDate","desiderataRef","q","query","querySnapshot","batch","writeBatch","forEach","desiderata","isDesiderataObsolete","delete","ref","commit","desiderataStart","startDate","desiderataEnd","endDate","newStart","newEnd","getPeriodeSaisie","periodeDoc","getDesiderataByUser","where","userId","getDesiderataForPeriod","debut","fin","debutTimestamp","finTimestamp","nombreGardesSouhaitees","gardesGroupees","renfortsAssocies","updatePlanning","planningId","planning","planningRef","updateDoc","getPublishedPlanning","orderBy","limit","empty","publishedDoc","publishedAt","ChangePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","success","setSuccess","updatePassword","updateUserPassword","DashboardMedecin","setUser","setDesiderata","loading","setLoading","showChangePassword","setShowChangePassword","useEffect","unsubscribe","onAuthStateChanged","authUser","userData","userDesiderata","desiderataError","Link","to","onClick","nom","length","d","index","toLocaleDateString","DashboardAdmin","prenom","MultiSelect","_ref","options","placeholder","isOpen","setIsOpen","dropdownRef","useRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","getSelectedCount","Object","values","filter","Boolean","handleToggle","toggleAll","allSelected","every","option","newValue","checked","readOnly","optionId","handleOptionClick","label","creneaux","medecins","samediOnly","joursMap","joursFeries","FormulaireDesirata","periodeSaisie","setPeriodeSaisie","setNombreGardesSouhaitees","nombreGardesMaxParSemaine","setNombreGardesMaxParSemaine","setGardesGroupees","setRenfortsAssocies","existingDesiderataId","setExistingDesiderataId","isQuickFillVisible","setIsQuickFillVisible","selectedCreneaux","setSelectedCreneaux","selectedJours","setSelectedJours","selectedDispo","setSelectedDispo","quickFillStartDate","setQuickFillStartDate","quickFillEndDate","setQuickFillEndDate","isCopyWeekVisible","setIsCopyWeekVisible","copyStartDate","setCopyStartDate","copyEndDate","setCopyEndDate","copyTargetStartDate","setCopyTargetStartDate","copyTargetEndDate","setCopyTargetEndDate","generateDates","useCallback","dates","currentDate","end","setDate","getDate","periode","relevantDesiderata","find","fetchData","formatDate","getDay","toString","padStart","getMonth","desiderataData","desiderataId","updateDesiderata","alert","addDoc","addDesiderata","parseInt","min","max","split","handleSelectFullPeriod","handleQuickFill","selectedCreneauxArray","entries","_","isSelected","_ref2","creneauId","selectedJoursArray","_ref3","_ref4","jourId","prev","newDesiderata","includes","handleCopyWeek","targetStart","targetEnd","pattern","dateStr","patternDay","creneau","isHighlighted","day","formattedDate","isWeekendOrHoliday","_desiderata$dateStrin","handleDesiderataChange","GestionUtilisateurs","users","setUsers","newUser","setNewUser","setCurrentUser","fetchUsers","fetchedUsers","handleInputChange","name","handleDeleteUser","window","confirm","deleteDoc","deleteUser","createUserWithEmailAndPassword","registerUser","creneauxChevauchants","aCreneauxChevauchants","medecinId","creneauxDuJour","some","creneauChevauchant","_creneauxDuJour$crene","genererPlanningSolution","c","assignerMedecins","getWeekNumber","setHours","yearStart","getFullYear","Math","ceil","compterGardesParSemaine","weekNumber","count","planningDate","medecinsPriorises","_desiderata$medecinId","_desiderata$medecinId2","_desiderata$medecinId3","choix","preferences","gardesParSemaine","maxGardesParSemaine","aChevauchement","sort","a","b","_desiderata$a","_desiderata$a$prefere","_desiderata$b","_desiderata$b$prefere","choixA","choixB","assignes","i","medecinChoisi","choisirMedecin","splice","indexOf","medecinsDispo","mois","scoreA","calculerScoreMedecin","_prefMedecin$preferen","_prefMedecin$preferen2","_prefMedecin$preferen3","score","prefMedecin","gardesDuMois","compterGardesMois","estWeekEnd","aGardeWeekEnd","startsWith","aGardeJour","aRenfortJour","reduce","flat","m","jour","dateObj","debutWeekEnd","finWeekEnd","_planning$date$RENFOR","_planning$date$RENFOR2","rechercheTabou","maxIterations","arguments","undefined","meilleurPlanning","meilleurScore","evaluerPlanning","listeTabou","Set","voisins","genererVoisins","meilleurVoisin","meilleurScoreVoisin","Infinity","voisin","scoreVoisin","has","JSON","stringify","add","size","next","keys","floor","random","medecin","_desiderata$medecin","nouveauPlanning","parse","maxGardes","verifierContraintes","planningRetrait","gardesParMedecin","gardesParMedecinParSemaine","_desiderata$medecinId4","_desiderata$medecinId5","_desiderata$medecinId6","_desiderata$medecinId7","_desiderata$medecinId8","semaine","_desiderata$medecinId9","abs","medecinsDuJour","hierMedecins","avantHierMedecins","GestionPlanning","isAdmin","setPlanning","publishedPlanning","setPublishedPlanning","editMode","setEditMode","modifie","setModifie","allMedecins","setAllMedecins","viewMode","setViewMode","showDesiderata","setShowDesiderata","selectedMedecin","setSelectedMedecin","getMedecins","latestPlanning","latestDoc","getLatestPlanning","publishedPlan","formattedDesiderata","formatDesiderata","formatted","getColor","sortMedecins","_desiderata$a$id","_desiderata$a$id$form","_desiderata$b$id","_desiderata$b$id$form","order","getDayOfWeek","getMedecinName","getChoixLabel","getChoixStyle","sortedDates","newPlanningData","assign","genererPlanning","updatedPlanning","savedPlanningId","savePlanning","toggleEditMode","now","publishPlanning","updatedPublishedPlanning","exportToICS","events","startHour","endHour","start","getHours","getMinutes","title","description","location","createEvents","blob","Blob","link","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","_desiderata$medecin$i","_desiderata$medecin$i2","handleMedecinChange","newPlanning","GestionPeriodeSaisie","setStartDate","setEndDate","setDoc","App","Router","Switch","Route","exact","path","component","render","ReactDOM","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d1cc62b.chunk.js","sourcesContent":["// src/firebase.js\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDesXYDyPsrG5HxkkPbj9XuqFQV91j2ixY\",\r\n  authDomain: \"apum-8cfa4.firebaseapp.com\",\r\n  databaseURL: \"https://apum-8cfa4-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"apum-8cfa4\",\r\n  storageBucket: \"apum-8cfa4.appspot.com\",\r\n  messagingSenderId: \"965430779165\",\r\n  appId: \"1:965430779165:web:2b1d142cc5937744d5d5f4\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\nexport { db, auth };","import { db, auth } from '../firebase';\r\nimport { doc, getDoc, setDoc, updateDoc, deleteDoc, getDocs, collection, query, where } from 'firebase/firestore';\r\n\r\nconst USERS_COLLECTION = 'users';\r\n\r\nexport const createUser = async (uid, userData) => {\r\n  try {\r\n    await setDoc(doc(db, USERS_COLLECTION, uid), userData);\r\n    console.log('Utilisateur créé avec succès');\r\n  } catch (error) {\r\n    console.error('Erreur lors de la création de l\\'utilisateur:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUser = async (uid) => {\r\n  try {\r\n    const userDoc = await getDoc(doc(db, USERS_COLLECTION, uid));\r\n    if (userDoc.exists()) {\r\n      console.log('Utilisateur trouvé:', userDoc.data());\r\n      return { id: userDoc.id, ...userDoc.data() };\r\n    } else {\r\n      console.log('Aucun utilisateur trouvé avec cet UID');\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération de l\\'utilisateur:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateUser = async (uid, userData) => {\r\n  try {\r\n    await updateDoc(doc(db, USERS_COLLECTION, uid), userData);\r\n    console.log('Utilisateur mis à jour avec succès');\r\n  } catch (error) {\r\n    console.error('Erreur lors de la mise à jour de l\\'utilisateur:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteUser = async (uid) => {\r\n  try {\r\n    await deleteDoc(doc(db, USERS_COLLECTION, uid));\r\n    console.log('Utilisateur supprimé avec succès');\r\n  } catch (error) {\r\n    console.error('Erreur lors de la suppression de l\\'utilisateur:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllUsers = async () => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n\r\n    const currentUserDoc = await getDoc(doc(db, USERS_COLLECTION, user.uid));\r\n    if (!currentUserDoc.exists()) {\r\n      throw new Error('Utilisateur non trouvé');\r\n    }\r\n\r\n    const querySnapshot = await getDocs(collection(db, USERS_COLLECTION));\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération de tous les utilisateurs:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getMedecins = async () => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n\r\n    const q = query(collection(db, USERS_COLLECTION), where(\"role\", \"==\", \"medecin\"));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération des médecins:', error);\r\n    throw error;\r\n  }\r\n};","import { auth } from '../firebase';\r\nimport { \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword, \r\n  signOut,\r\n  updatePassword\r\n} from 'firebase/auth';\r\nimport { getUser } from './userService';\r\n\r\nexport const registerUser = async (email, password) => {\r\n  try {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    console.log('Utilisateur enregistré:', userCredential);\r\n    return userCredential;\r\n  } catch (error) {\r\n    console.error('Erreur lors de l\\'enregistrement:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n    console.log('Utilisateur connecté:', userCredential);\r\n    const userDetails = await getUser(userCredential.user.uid);\r\n    return { ...userCredential, role: userDetails.role };\r\n  } catch (error) {\r\n    console.error('Erreur lors de la connexion:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  try {\r\n    await signOut(auth);\r\n    console.log('Utilisateur déconnecté');\r\n  } catch (error) {\r\n    console.error('Erreur lors de la déconnexion:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const checkUserRole = async (uid, allowedRoles) => {\r\n  try {\r\n    const user = await getUser(uid);\r\n    if (user && allowedRoles.includes(user.role)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la vérification du rôle:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const updateUserPassword = async (newPassword) => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      await updatePassword(user, newPassword);\r\n      console.log('Mot de passe mis à jour avec succès');\r\n    } else {\r\n      throw new Error('Aucun utilisateur connecté');\r\n    }\r\n  } catch (error) {\r\n    console.error('Erreur lors de la mise à jour du mot de passe:', error);\r\n    throw error;\r\n  }\r\n};","// src/components/Login.js\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { loginUser } from '../services/authService';\r\nimport { getUser } from '../services/userService';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      console.log('Tentative de connexion avec:', email);\r\n      const userCredential = await loginUser(email, password);\r\n      console.log('Résultat de loginUser:', userCredential);\r\n      \r\n      if (!userCredential || !userCredential.user) {\r\n        throw new Error('Échec de l\\'authentification');\r\n      }\r\n\r\n      console.log('Connexion réussie, récupération des informations utilisateur');\r\n      const user = await getUser(userCredential.user.uid);\r\n      console.log('Informations utilisateur récupérées:', user);\r\n      \r\n      if (!user) {\r\n        throw new Error('Utilisateur non trouvé dans Firestore');\r\n      }\r\n\r\n      console.log('Rôle de l\\'utilisateur:', user.role);\r\n      if (user.role === 'medecin') {\r\n        console.log('Redirection vers le tableau de bord médecin');\r\n        history.push('/dashboard-medecin');\r\n      } else if (user.role === 'admin') {\r\n        console.log('Redirection vers le tableau de bord admin');\r\n        history.push('/dashboard-admin');\r\n      } else {\r\n        console.log('Rôle non reconnu:', user.role);\r\n        setError('Rôle utilisateur non reconnu');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur de connexion:\", error);\r\n      setError('Identifiants incorrects ou erreur de connexion: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Connexion</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"email\">Email :</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Mot de passe :</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import { db, auth } from '../firebase';\r\nimport { \r\n  collection, \r\n  addDoc, \r\n  updateDoc, \r\n  doc, \r\n  deleteDoc, \r\n  getDocs, \r\n  query, \r\n  where,\r\n  orderBy,\r\n  limit,\r\n  getDoc,\r\n  setDoc,\r\n  Timestamp,\r\n  writeBatch\r\n} from 'firebase/firestore';\r\n\r\nconst DESIDERATA_COLLECTION = 'desiderata';\r\nconst PLANNING_COLLECTION = 'planning';\r\nconst PERIODE_SAISIE_DOC = 'periode_saisie';\r\n\r\nconst convertToTimestamp = (dateString) => {\r\n  if (dateString instanceof Timestamp) {\r\n    return dateString;\r\n  }\r\n  const date = new Date(dateString);\r\n  return Timestamp.fromDate(date);\r\n};\r\n\r\nconst convertFromTimestamp = (timestamp) => {\r\n  if (timestamp instanceof Timestamp) {\r\n    return timestamp.toDate().toISOString();\r\n  }\r\n  if (typeof timestamp === 'string') {\r\n    return timestamp;\r\n  }\r\n  console.error('Format de date non reconnu:', timestamp);\r\n  return null;\r\n};\r\n\r\nexport const setPeriodeSaisie = async (startDate, endDate) => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n    \r\n    await setDoc(doc(db, PLANNING_COLLECTION, PERIODE_SAISIE_DOC), { \r\n      startDate: convertToTimestamp(startDate),\r\n      endDate: convertToTimestamp(endDate)\r\n    });\r\n\r\n    await deleteObsoleteDesiderata(startDate, endDate);\r\n\r\n    console.log('Période de saisie mise à jour et desiderata obsolètes supprimés');\r\n  } catch (error) {\r\n    console.error('Erreur lors de la mise à jour de la période de saisie:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst deleteObsoleteDesiderata = async (newStartDate, newEndDate) => {\r\n  try {\r\n    const desiderataRef = collection(db, DESIDERATA_COLLECTION);\r\n    const q = query(desiderataRef);\r\n    const querySnapshot = await getDocs(q);\r\n\r\n    const batch = writeBatch(db);\r\n    querySnapshot.forEach((doc) => {\r\n      const desiderata = doc.data();\r\n      if (isDesiderataObsolete(desiderata, newStartDate, newEndDate)) {\r\n        batch.delete(doc.ref);\r\n      }\r\n    });\r\n\r\n    await batch.commit();\r\n    console.log('Desiderata obsolètes supprimés');\r\n  } catch (error) {\r\n    console.error('Erreur lors de la suppression des desiderata obsolètes:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst isDesiderataObsolete = (desiderata, newStartDate, newEndDate) => {\r\n  const desiderataStart = desiderata.startDate.toDate();\r\n  const desiderataEnd = desiderata.endDate.toDate();\r\n  const newStart = new Date(newStartDate);\r\n  const newEnd = new Date(newEndDate);\r\n\r\n  return desiderataEnd < newStart || desiderataStart > newEnd;\r\n};\r\n\r\nexport const getPeriodeSaisie = async () => {\r\n  try {\r\n    const periodeDoc = await getDoc(doc(db, PLANNING_COLLECTION, PERIODE_SAISIE_DOC));\r\n    if (periodeDoc.exists()) {\r\n      const data = periodeDoc.data();\r\n      return {\r\n        startDate: convertFromTimestamp(data.startDate),\r\n        endDate: convertFromTimestamp(data.endDate)\r\n      };\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération de la période de saisie:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addDesiderata = async (userId, desiderata) => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n\r\n    const docRef = await addDoc(collection(db, DESIDERATA_COLLECTION), {\r\n      userId,\r\n      startDate: convertToTimestamp(desiderata.startDate),\r\n      endDate: convertToTimestamp(desiderata.endDate),\r\n      desiderata: desiderata.desiderata,\r\n      nombreGardesSouhaitees: desiderata.nombreGardesSouhaitees,\r\n      nombreGardesMaxParSemaine: desiderata.nombreGardesMaxParSemaine, // Ajout de ce champ\r\n      gardesGroupees: desiderata.gardesGroupees,\r\n      renfortsAssocies: desiderata.renfortsAssocies\r\n    });\r\n    return docRef.id;\r\n  } catch (error) {\r\n    console.error('Erreur lors de l\\'ajout des desiderata:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateDesiderata = async (desiderataId, desiderata) => {\r\n  try {\r\n    const desiderataRef = doc(db, DESIDERATA_COLLECTION, desiderataId);\r\n    await updateDoc(desiderataRef, {\r\n      startDate: convertToTimestamp(desiderata.startDate),\r\n      endDate: convertToTimestamp(desiderata.endDate),\r\n      desiderata: desiderata.desiderata,\r\n      nombreGardesSouhaitees: desiderata.nombreGardesSouhaitees,\r\n      nombreGardesMaxParSemaine: desiderata.nombreGardesMaxParSemaine, // Ajout de ce champ\r\n      gardesGroupees: desiderata.gardesGroupees,\r\n      renfortsAssocies: desiderata.renfortsAssocies\r\n    });\r\n    console.log('Desiderata mis à jour avec succès');\r\n  } catch (error) {\r\n    console.error('Erreur lors de la mise à jour des desiderata:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getDesiderataByUser = async (userId) => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n    const q = query(collection(db, DESIDERATA_COLLECTION), where(\"userId\", \"==\", userId));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => {\r\n      const data = doc.data();\r\n      return { \r\n        id: doc.id, \r\n        ...data,\r\n        startDate: convertFromTimestamp(data.startDate),\r\n        endDate: convertFromTimestamp(data.endDate)\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération des desiderata:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getDesiderataForPeriod = async (debut, fin) => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n\r\n    const debutTimestamp = convertToTimestamp(debut);\r\n    const finTimestamp = convertToTimestamp(fin);\r\n\r\n    const q = query(\r\n      collection(db, DESIDERATA_COLLECTION),\r\n      where(\"startDate\", \"<=\", finTimestamp),\r\n      where(\"endDate\", \">=\", debutTimestamp)\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => {\r\n      const data = doc.data();\r\n      return {\r\n        id: doc.id,\r\n        userId: data.userId,\r\n        startDate: convertFromTimestamp(data.startDate),\r\n        endDate: convertFromTimestamp(data.endDate),\r\n        desiderata: data.desiderata,\r\n        nombreGardesSouhaitees: data.nombreGardesSouhaitees,\r\n        gardesGroupees: data.gardesGroupees,\r\n        renfortsAssocies: data.renfortsAssocies\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération des desiderata pour la période:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const savePlanning = async (planning) => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n    const docRef = await addDoc(collection(db, PLANNING_COLLECTION), {\r\n      ...planning,\r\n      startDate: convertToTimestamp(planning.startDate),\r\n      endDate: convertToTimestamp(planning.endDate),\r\n    });\r\n    return docRef.id;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la sauvegarde du planning:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updatePlanning = async (planningId, planning) => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n    const planningRef = doc(db, PLANNING_COLLECTION, planningId);\r\n    await updateDoc(planningRef, {\r\n      ...planning,\r\n      startDate: convertToTimestamp(planning.startDate),\r\n      endDate: convertToTimestamp(planning.endDate),\r\n    });\r\n  } catch (error) {\r\n    console.error('Erreur lors de la mise à jour du planning:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getLatestPlanning = async () => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n    const q = query(collection(db, PLANNING_COLLECTION), orderBy('startDate', 'desc'), limit(1));\r\n    const querySnapshot = await getDocs(q);\r\n    if (querySnapshot.empty) {\r\n      return null;\r\n    }\r\n    const latestDoc = querySnapshot.docs[0];\r\n    const data = latestDoc.data();\r\n    return { \r\n      id: latestDoc.id, \r\n      ...data,\r\n      startDate: convertFromTimestamp(data.startDate),\r\n      endDate: convertFromTimestamp(data.endDate)\r\n    };\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération du dernier planning:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deletePlanning = async (planningId) => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n    await deleteDoc(doc(db, PLANNING_COLLECTION, planningId));\r\n  } catch (error) {\r\n    console.error('Erreur lors de la suppression du planning:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const publishPlanning = async (planningId) => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n    const planningRef = doc(db, PLANNING_COLLECTION, planningId);\r\n    await updateDoc(planningRef, {\r\n      publishedAt: Timestamp.now()\r\n    });\r\n  } catch (error) {\r\n    console.error('Erreur lors de la publication du planning:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getPublishedPlanning = async () => {\r\n  try {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      throw new Error('Utilisateur non authentifié');\r\n    }\r\n    const q = query(\r\n      collection(db, PLANNING_COLLECTION), \r\n      where(\"publishedAt\", \"!=\", null),\r\n      orderBy(\"publishedAt\", \"desc\"),\r\n      limit(1)\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    if (querySnapshot.empty) {\r\n      return null;\r\n    }\r\n    const publishedDoc = querySnapshot.docs[0];\r\n    const data = publishedDoc.data();\r\n    return { \r\n      id: publishedDoc.id, \r\n      ...data,\r\n      startDate: convertFromTimestamp(data.startDate),\r\n      endDate: convertFromTimestamp(data.endDate),\r\n      publishedAt: convertFromTimestamp(data.publishedAt)\r\n    };\r\n  } catch (error) {\r\n    console.error('Erreur lors de la récupération du planning publié:', error);\r\n    throw error;\r\n  }\r\n};","import React, { useState } from 'react';\r\nimport { updateUserPassword } from '../services/authService';\r\n\r\nfunction ChangePassword() {\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError('Les nouveaux mots de passe ne correspondent pas.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await updateUserPassword(newPassword);\r\n      setSuccess('Mot de passe mis à jour avec succès.');\r\n      setCurrentPassword('');\r\n      setNewPassword('');\r\n      setConfirmPassword('');\r\n    } catch (error) {\r\n      setError('Erreur lors de la mise à jour du mot de passe: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"change-password-container\">\r\n      <h2>Changer le mot de passe</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {success && <p className=\"success\">{success}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"currentPassword\">Mot de passe actuel:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"currentPassword\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"newPassword\">Nouveau mot de passe:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmPassword\">Confirmer le nouveau mot de passe:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Changer le mot de passe</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\nimport { getUser } from '../services/userService';\r\nimport { getDesiderataByUser } from '../services/planningService';\r\nimport { logoutUser } from '../services/authService';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nfunction DashboardMedecin() {\r\n  const [user, setUser] = useState(null);\r\n  const [desiderata, setDesiderata] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showChangePassword, setShowChangePassword] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\r\n      if (authUser) {\r\n        try {\r\n          console.log('Utilisateur authentifié:', authUser);\r\n          const userData = await getUser(authUser.uid);\r\n          console.log('Données utilisateur récupérées:', userData);\r\n          if (userData && userData.role === 'medecin') {\r\n            setUser(userData);\r\n            try {\r\n              const userDesiderata = await getDesiderataByUser(userData.id);\r\n              setDesiderata(userDesiderata);\r\n            } catch (desiderataError) {\r\n              console.error('Erreur lors de la récupération des desiderata:', desiderataError);\r\n              // On ne bloque pas l'affichage du dashboard si les desiderata ne peuvent pas être récupérés\r\n            }\r\n          } else {\r\n            setError('Utilisateur non autorisé ou données manquantes');\r\n            history.push('/');\r\n          }\r\n        } catch (error) {\r\n          console.error('Erreur lors de la récupération des données:', error);\r\n          setError('Erreur lors de la récupération des données: ' + error.message);\r\n        }\r\n      } else {\r\n        setUser(null);\r\n        setDesiderata([]);\r\n        history.push('/');\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [history]);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logoutUser();\r\n      history.push('/');\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la déconnexion:\", error);\r\n      setError('Erreur lors de la déconnexion: ' + error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Erreur: {error}</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <div>Utilisateur non trouvé</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Tableau de bord Médecin</h1>\r\n      <nav>\r\n        <ul>\r\n          <li><Link to=\"/formulaire-desirata\">Saisir des desiderata</Link></li>\r\n          <li><Link to=\"/visualisation-planning\">Visualiser le planning</Link></li>\r\n          <li><button onClick={() => setShowChangePassword(!showChangePassword)}>\r\n            {showChangePassword ? 'Masquer' : 'Modifier le mot de passe'}\r\n          </button></li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"dashboard-content\">\r\n        <h2>Bienvenue, Dr. {user.nom}</h2>\r\n        <p>Ici, vous pouvez accéder à vos fonctionnalités principales :</p>\r\n        <ul>\r\n          <li>Saisir vos desiderata pour les prochaines périodes</li>\r\n          <li>Visualiser le planning actuel</li>\r\n          <li>Modifier votre mot de passe</li>\r\n        </ul>\r\n        {desiderata.length > 0 && (\r\n          <div>\r\n            <h3>Vos derniers desiderata :</h3>\r\n            <ul>\r\n              {desiderata.map((d, index) => (\r\n                <li key={index}>\r\n                  Pour la période du {new Date(d.startDate).toLocaleDateString()} au {new Date(d.endDate).toLocaleDateString()}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        {showChangePassword && <ChangePassword />}\r\n      </div>\r\n      <button onClick={handleLogout}>Se déconnecter</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardMedecin;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\nimport { getUser } from '../services/userService';\r\nimport { logoutUser } from '../services/authService';\r\nimport ChangePassword from './ChangePassword';\r\n\r\nfunction DashboardAdmin() {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showChangePassword, setShowChangePassword] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\r\n      if (authUser) {\r\n        try {\r\n          const userData = await getUser(authUser.uid);\r\n          if (userData && userData.role === 'admin') {\r\n            setUser(userData);\r\n          } else {\r\n            setError('Utilisateur non autorisé ou données manquantes');\r\n            history.push('/');\r\n          }\r\n        } catch (error) {\r\n          console.error('Erreur lors de la récupération des données:', error);\r\n          setError('Erreur lors de la récupération des données: ' + error.message);\r\n        }\r\n      } else {\r\n        setUser(null);\r\n        history.push('/');\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [history]);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logoutUser();\r\n      history.push('/');\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la déconnexion:\", error);\r\n      setError('Erreur lors de la déconnexion: ' + error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Erreur: {error}</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <div>Utilisateur non trouvé</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Tableau de bord Administrateur</h1>\r\n      <nav>\r\n        <ul>\r\n          <li><Link to=\"/gestion-utilisateurs\">Gestion des utilisateurs</Link></li>\r\n          <li><Link to=\"/gestion-planning-admin\">Gestion du planning</Link></li>\r\n          <li><Link to=\"/gestion-periode-saisie\">Gestion de la période de saisie</Link></li>\r\n          <li><button onClick={() => setShowChangePassword(!showChangePassword)}>\r\n            {showChangePassword ? 'Masquer' : 'Modifier le mot de passe'}\r\n          </button></li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"dashboard-content\">\r\n        <h2>Bienvenue, {user.prenom} {user.nom}</h2>\r\n        <p>Ici, vous pouvez accéder à vos fonctionnalités principales :</p>\r\n        <ul>\r\n          <li>Gérer les utilisateurs</li>\r\n          <li>Gérer le planning</li>\r\n          <li>Définir la période de saisie des desiderata</li>\r\n          <li>Modifier votre mot de passe</li>\r\n        </ul>\r\n        {showChangePassword && <ChangePassword />}\r\n      </div>\r\n      <button onClick={handleLogout}>Se déconnecter</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardAdmin;","// src/components/MultiSelect.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\nfunction MultiSelect({ options, value, onChange, placeholder }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const handleToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (optionId) => {\r\n    const newValue = {\r\n      ...value,\r\n      [optionId]: !value[optionId]\r\n    };\r\n    onChange(newValue);\r\n  };\r\n\r\n  const getSelectedCount = () => {\r\n    return Object.values(value).filter(Boolean).length;\r\n  };\r\n\r\n  const toggleAll = () => {\r\n    const allSelected = options.every(option => value[option.id]);\r\n    const newValue = {};\r\n    options.forEach(option => {\r\n      newValue[option.id] = !allSelected;\r\n    });\r\n    onChange(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"multiselect\" ref={dropdownRef}>\r\n      <div className=\"multiselect-header\" onClick={handleToggle}>\r\n        <span>\r\n          {getSelectedCount() === 0 \r\n            ? placeholder \r\n            : `${getSelectedCount()} sélectionné${getSelectedCount() > 1 ? 's' : ''}`}\r\n        </span>\r\n        <span className={`arrow ${isOpen ? 'up' : 'down'}`}></span>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"multiselect-dropdown\">\r\n          <div className=\"select-all\" onClick={toggleAll}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={options.every(option => value[option.id])}\r\n              readOnly\r\n            />\r\n            <span>Tout sélectionner</span>\r\n          </div>\r\n          {options.map(option => (\r\n            <div\r\n              key={option.id}\r\n              className=\"multiselect-option\"\r\n              onClick={() => handleOptionClick(option.id)}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={value[option.id] || false}\r\n                readOnly\r\n              />\r\n              <span>{option.label}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiSelect;","// src/components/FormulaireDesirata.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\nimport { getUser } from '../services/userService';\r\nimport { addDesiderata, getPeriodeSaisie, getDesiderataByUser, updateDesiderata } from '../services/planningService';\r\nimport MultiSelect from './MultiSelect';\r\n\r\nconst creneaux = [\r\n  { id: 'QUART_1', label: '1er QUART (1h - 7h)', medecins: 2 },\r\n  { id: 'QUART_2', label: '2ème QUART (7h - 13h)', medecins: 3 },\r\n  { id: 'RENFORT_1', label: 'RENFORT 10h / 13h', medecins: 1, samediOnly: true },\r\n  { id: 'QUART_3', label: '3ème QUART (13h - 19h)', medecins: 3 },\r\n  { id: 'RENFORT_2', label: 'RENFORT 20H / 00H', medecins: 1 },\r\n  { id: 'QUART_4', label: '4ème QUART (19h - 1h)', medecins: 3 },\r\n];\r\n\r\nconst joursMap = [\r\n  { id: '0', label: 'Dimanche' },\r\n  { id: '1', label: 'Lundi' },\r\n  { id: '2', label: 'Mardi' },\r\n  { id: '3', label: 'Mercredi' },\r\n  { id: '4', label: 'Jeudi' },\r\n  { id: '5', label: 'Vendredi' },\r\n  { id: '6', label: 'Samedi' }\r\n];\r\n\r\nconst options = ['Oui', 'Non', 'Possible'];\r\n\r\nconst joursFeries = [\r\n  '2024-01-01', '2024-04-01', '2024-05-01', '2024-05-08', '2024-05-09',\r\n  '2024-05-20', '2024-07-14', '2024-08-15', '2024-11-01', '2024-11-11', '2024-12-25'\r\n];\r\n\r\nfunction FormulaireDesirata() {\r\n  // États de base\r\n  const [periodeSaisie, setPeriodeSaisie] = useState(null);\r\n  const [desiderata, setDesiderata] = useState({});\r\n  const [nombreGardesSouhaitees, setNombreGardesSouhaitees] = useState(0);\r\n  const [nombreGardesMaxParSemaine, setNombreGardesMaxParSemaine] = useState(3);\r\n  const [gardesGroupees, setGardesGroupees] = useState(false);\r\n  const [renfortsAssocies, setRenfortsAssocies] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [existingDesiderataId, setExistingDesiderataId] = useState(null);\r\n\r\n  // États pour le remplissage rapide\r\n  const [isQuickFillVisible, setIsQuickFillVisible] = useState(false);\r\n  const [selectedCreneaux, setSelectedCreneaux] = useState({});\r\n  const [selectedJours, setSelectedJours] = useState({});\r\n  const [selectedDispo, setSelectedDispo] = useState('');\r\n  const [quickFillStartDate, setQuickFillStartDate] = useState('');\r\n  const [quickFillEndDate, setQuickFillEndDate] = useState('');\r\n\r\n  // États pour la copie de semaine\r\n  const [isCopyWeekVisible, setIsCopyWeekVisible] = useState(false);\r\n  const [copyStartDate, setCopyStartDate] = useState('');\r\n  const [copyEndDate, setCopyEndDate] = useState('');\r\n  const [copyTargetStartDate, setCopyTargetStartDate] = useState('');\r\n  const [copyTargetEndDate, setCopyTargetEndDate] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  const generateDates = useCallback(() => {\r\n    if (!periodeSaisie) return [];\r\n    const dates = [];\r\n    let currentDate = new Date(periodeSaisie.startDate);\r\n    const end = new Date(periodeSaisie.endDate);\r\n    while (currentDate <= end) {\r\n      dates.push(new Date(currentDate));\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n    return dates;\r\n  }, [periodeSaisie]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const authUser = auth.currentUser;\r\n        if (!authUser) {\r\n          history.push('/');\r\n          return;\r\n        }\r\n\r\n        const userData = await getUser(authUser.uid);\r\n        if (userData && userData.role === 'medecin') {\r\n          setUser(userData);\r\n          const periode = await getPeriodeSaisie();\r\n          if (periode) {\r\n            setPeriodeSaisie(periode);\r\n            const userDesiderata = await getDesiderataByUser(userData.id);\r\n            const relevantDesiderata = userDesiderata.find(d => \r\n              new Date(d.startDate) <= new Date(periode.endDate) && \r\n              new Date(d.endDate) >= new Date(periode.startDate)\r\n            );\r\n            \r\n            if (relevantDesiderata) {\r\n              setExistingDesiderataId(relevantDesiderata.id);\r\n              setDesiderata(relevantDesiderata.desiderata || {});\r\n              setNombreGardesSouhaitees(relevantDesiderata.nombreGardesSouhaitees || 0);\r\n              setNombreGardesMaxParSemaine(relevantDesiderata.nombreGardesMaxParSemaine || 3);\r\n              setGardesGroupees(relevantDesiderata.gardesGroupees || false);\r\n              setRenfortsAssocies(relevantDesiderata.renfortsAssocies || false);\r\n            }\r\n          } else {\r\n            setError('Aucune période de saisie n\\'a été définie par l\\'administrateur.');\r\n          }\r\n        } else {\r\n          setError('Utilisateur non autorisé');\r\n          history.push('/');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des données:', error);\r\n        setError('Erreur lors de la récupération des données: ' + error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [history]);\r\n\r\n  const handleDesiderataChange = (date, creneau, value) => {\r\n    setDesiderata(prev => ({\r\n      ...prev,\r\n      [date]: {\r\n        ...(prev[date] || {}),\r\n        [creneau]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSelectFullPeriod = () => {\r\n    if (periodeSaisie) {\r\n      setQuickFillStartDate(new Date(periodeSaisie.startDate).toISOString().split('T')[0]);\r\n      setQuickFillEndDate(new Date(periodeSaisie.endDate).toISOString().split('T')[0]);\r\n    }\r\n  };\r\n\r\n  const handleQuickFill = () => {\r\n    if (!selectedDispo) {\r\n      alert('Veuillez sélectionner une disponibilité.');\r\n      return;\r\n    }\r\n\r\n    if (!quickFillStartDate || !quickFillEndDate) {\r\n      alert('Veuillez sélectionner une période pour le remplissage rapide.');\r\n      return;\r\n    }\r\n\r\n    const selectedCreneauxArray = Object.entries(selectedCreneaux)\r\n      .filter(([_, isSelected]) => isSelected)\r\n      .map(([creneauId]) => creneauId);\r\n\r\n    const selectedJoursArray = Object.entries(selectedJours)\r\n      .filter(([_, isSelected]) => isSelected)\r\n      .map(([jourId]) => jourId);\r\n\r\n    if (selectedCreneauxArray.length === 0) {\r\n      alert('Veuillez sélectionner au moins un créneau.');\r\n      return;\r\n    }\r\n\r\n    if (selectedJoursArray.length === 0) {\r\n      alert('Veuillez sélectionner au moins un jour.');\r\n      return;\r\n    }\r\n\r\n    const startDate = new Date(quickFillStartDate);\r\n    const endDate = new Date(quickFillEndDate);\r\n\r\n    if (startDate > endDate) {\r\n      alert('La date de début doit être antérieure à la date de fin.');\r\n      return;\r\n    }\r\n\r\n    setDesiderata(prev => {\r\n      const newDesiderata = { ...prev };\r\n      const dates = generateDates().filter(date => \r\n        date >= startDate && \r\n        date <= endDate\r\n      );\r\n\r\n      dates.forEach(date => {\r\n        if (selectedJoursArray.includes(date.getDay().toString())) {\r\n          const dateString = date.toISOString().split('T')[0];\r\n          if (!newDesiderata[dateString]) {\r\n            newDesiderata[dateString] = {};\r\n          }\r\n          selectedCreneauxArray.forEach(creneauId => {\r\n            if (creneauId !== 'RENFORT_1' || date.getDay() === 6) {\r\n              newDesiderata[dateString][creneauId] = selectedDispo;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      return newDesiderata;\r\n    });\r\n\r\n    alert('Les créneaux ont été remplis avec succès !');\r\n  };\r\n\r\n  const handleCopyWeek = () => {\r\n    if (!copyStartDate || !copyEndDate || !copyTargetStartDate || !copyTargetEndDate) {\r\n      alert('Veuillez sélectionner toutes les dates nécessaires.');\r\n      return;\r\n    }\r\n\r\n    const startDate = new Date(copyStartDate);\r\n    const endDate = new Date(copyEndDate);\r\n    const targetStart = new Date(copyTargetStartDate);\r\n    const targetEnd = new Date(copyTargetEndDate);\r\n\r\n    if (startDate > endDate || targetStart > targetEnd) {\r\n      alert('Les dates de début doivent être antérieures aux dates de fin.');\r\n      return;\r\n    }\r\n\r\n    setDesiderata(prev => {\r\n      const newDesiderata = { ...prev };\r\n      const pattern = {};\r\n\r\n      // Extraire le pattern de la semaine source\r\n      for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {\r\n        const dateStr = d.toISOString().split('T')[0];\r\n        if (prev[dateStr]) {\r\n          pattern[d.getDay()] = prev[dateStr];\r\n        }\r\n      }\r\n\r\n      // Appliquer le pattern sur la période cible\r\n      let currentDate = new Date(targetStart);\r\n      while (currentDate <= targetEnd) {\r\n        const patternDay = pattern[currentDate.getDay()];\r\n        if (patternDay) {\r\n          const dateStr = currentDate.toISOString().split('T')[0];\r\n          newDesiderata[dateStr] = { ...patternDay };\r\n        }\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      }\r\n\r\n      return newDesiderata;\r\n    });\r\n\r\n    alert('Le pattern a été copié avec succès !');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (user) {\r\n      try {\r\n        if (!periodeSaisie || !periodeSaisie.startDate || !periodeSaisie.endDate) {\r\n          throw new Error('Période de saisie non définie');\r\n        }\r\n\r\n        const desiderataData = {\r\n          startDate: periodeSaisie.startDate,\r\n          endDate: periodeSaisie.endDate,\r\n          desiderata,\r\n          nombreGardesSouhaitees,\r\n          nombreGardesMaxParSemaine,\r\n          gardesGroupees,\r\n          renfortsAssocies\r\n        };\r\n\r\n        if (existingDesiderataId) {\r\n          await updateDesiderata(existingDesiderataId, desiderataData);\r\n          alert('Desiderata mis à jour avec succès!');\r\n        } else {\r\n          await addDesiderata(user.id, desiderataData);\r\n          alert('Desiderata soumis avec succès!');\r\n        }\r\n        history.push('/dashboard-medecin');\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la soumission des desiderata:\", error);\r\n        setError('Une erreur est survenue lors de la soumission des desiderata: ' + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const isWeekendOrHoliday = (date) => {\r\n    const day = date.getDay();\r\n    const formattedDate = date.toISOString().split('T')[0];\r\n    return day === 0 || day === 6 || joursFeries.includes(formattedDate);\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    const days = ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'];\r\n    const months = ['jan', 'fév', 'mar', 'avr', 'mai', 'juin', 'juil', 'août', 'sep', 'oct', 'nov', 'déc'];\r\n    \r\n    const dayOfWeek = days[date.getDay()];\r\n    const dayOfMonth = date.getDate().toString().padStart(2, '0');\r\n    const month = months[date.getMonth()];\r\n    \r\n    return `${dayOfWeek} ${dayOfMonth} ${month}`;\r\n  };\r\n\r\n  if (loading) return <div className=\"loading\">Chargement...</div>;\r\n  if (error) return <div className=\"error-message\">Erreur: {error}</div>;\r\n  if (!user || !periodeSaisie) return <div className=\"error-message\">Utilisateur non trouvé ou période de saisie non définie</div>;\r\n\r\n  const dates = generateDates();\r\n\r\n  return (\r\n    <div className=\"formulaire-container\">\r\n      <h1 className=\"page-title\">Formulaire de Desiderata</h1>\r\n      <Link to=\"/dashboard-medecin\" className=\"back-link\">Retour au tableau de bord</Link>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"desiderata-form\">\r\n        <h2 className=\"section-title\">\r\n          Période de saisie: du {new Date(periodeSaisie.startDate).toLocaleDateString()} \r\n          au {new Date(periodeSaisie.endDate).toLocaleDateString()}\r\n        </h2>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nombreGardes\">Nombre de gardes souhaitées par mois:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"nombreGardes\"\r\n            value={nombreGardesSouhaitees}\r\n            onChange={(e) => setNombreGardesSouhaitees(parseInt(e.target.value))}\r\n            min=\"0\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nombreGardesMaxParSemaine\">\r\n            Nombre maximum de gardes par semaine:\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"nombreGardesMaxParSemaine\"\r\n            value={nombreGardesMaxParSemaine}\r\n            onChange={(e) => setNombreGardesMaxParSemaine(parseInt(e.target.value))}\r\n            min=\"1\"\r\n            max=\"7\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"option-group\">\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={gardesGroupees}\r\n              onChange={(e) => setGardesGroupees(e.target.checked)}\r\n            />\r\n            <span className=\"slider\"></span>\r\n          </label>\r\n          <span>Gardes groupées dans un même week-end</span>\r\n        </div>\r\n        \r\n        <div className=\"option-group\">\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={renfortsAssocies}\r\n              onChange={(e) => setRenfortsAssocies(e.target.checked)}\r\n            />\r\n            <span className=\"slider\"></span>\r\n          </label>\r\n          <span>Renforts associés à une garde</span>\r\n        </div>\r\n\r\n        <div className=\"quick-fill-section\">\r\n          <button \r\n            type=\"button\" \r\n            className=\"toggle-quick-fill\"\r\n            onClick={() => setIsQuickFillVisible(!isQuickFillVisible)}\r\n          >\r\n            {isQuickFillVisible ? '▼ Masquer le remplissage rapide' : '▶ Afficher le remplissage rapide'}\r\n          </button>\r\n\r\n          <div className={`quick-fill-module ${isQuickFillVisible ? 'visible' : ''}`}>\r\n            <div className=\"date-range-container\">\r\n              <div>\r\n                <label>Période de remplissage:</label>\r\n                <div className=\"date-inputs\">\r\n                  <div>\r\n                    <label htmlFor=\"quickFillStartDate\">Du:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"quickFillStartDate\"\r\n                      value={quickFillStartDate}\r\n                      onChange={(e) => setQuickFillStartDate(e.target.value)}\r\n                      min={periodeSaisie?.startDate.split('T')[0]}\r\n                      max={periodeSaisie?.endDate.split('T')[0]}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"quickFillEndDate\">Au:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"quickFillEndDate\"\r\n                      value={quickFillEndDate}\r\n                      onChange={(e) => setQuickFillEndDate(e.target.value)}\r\n                      min={periodeSaisie?.startDate.split('T')[0]}\r\n                      max={periodeSaisie?.endDate.split('T')[0]}\r\n                    />\r\n                  </div>\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"select-full-period\"\r\n                    onClick={handleSelectFullPeriod}\r\n                  >\r\n                    Toute la période\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label>Créneaux:</label>\r\n              <MultiSelect\r\n                options={creneaux}\r\n                value={selectedCreneaux}\r\n                onChange={setSelectedCreneaux}\r\n                placeholder=\"Sélectionnez les créneaux\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Jours de la semaine:</label>\r\n              <MultiSelect\r\n                options={joursMap}\r\n                value={selectedJours}\r\n                onChange={setSelectedJours}\r\n                placeholder=\"Sélectionnez les jours\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"selectedDispo\">Disponibilité:</label>\r\n              <select\r\n                id=\"selectedDispo\"\r\n                value={selectedDispo}\r\n                onChange={(e) => setSelectedDispo(e.target.value)}\r\n              >\r\n                <option value=\"\">Sélectionnez une disponibilité</option>\r\n                {options.map(option => (\r\n                  <option key={option} value={option}>{option}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <button type=\"button\" onClick={handleQuickFill} className=\"fill-button\">\r\n              Remplir les créneaux sélectionnés\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"copy-week-section\">\r\n          <button \r\n            type=\"button\" \r\n            className=\"toggle-copy-week\"\r\n            onClick={() => setIsCopyWeekVisible(!isCopyWeekVisible)}\r\n          >\r\n            {isCopyWeekVisible ? '▼ Masquer la copie de semaine' : '▶ Afficher la copie de semaine'}\r\n          </button>\r\n\r\n          <div className={`copy-week-module ${isCopyWeekVisible ? 'visible' : ''}`}>\r\n            <div className=\"date-range-container\">\r\n              <div>\r\n                <h4>Semaine à copier :</h4>\r\n                <div className=\"date-inputs\">\r\n                  <div>\r\n                    <label htmlFor=\"copyStartDate\">Du:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"copyStartDate\"\r\n                      value={copyStartDate}\r\n                      onChange={(e) => setCopyStartDate(e.target.value)}\r\n                      min={periodeSaisie?.startDate.split('T')[0]}\r\n                      max={periodeSaisie?.endDate.split('T')[0]}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"copyEndDate\">Au:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"copyEndDate\"\r\n                      value={copyEndDate}\r\n                      onChange={(e) => setCopyEndDate(e.target.value)}\r\n                      min={periodeSaisie?.startDate.split('T')[0]}\r\n                      max={periodeSaisie?.endDate.split('T')[0]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <h4>Appliquer sur la période :</h4>\r\n                <div className=\"date-inputs\">\r\n                  <div>\r\n                    <label htmlFor=\"copyTargetStartDate\">Du:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"copyTargetStartDate\"\r\n                      value={copyTargetStartDate}\r\n                      onChange={(e) => setCopyTargetStartDate(e.target.value)}\r\n                      min={periodeSaisie?.startDate.split('T')[0]}\r\n                      max={periodeSaisie?.endDate.split('T')[0]}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"copyTargetEndDate\">Au:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"copyTargetEndDate\"\r\n                      value={copyTargetEndDate}\r\n                      onChange={(e) => setCopyTargetEndDate(e.target.value)}\r\n                      min={periodeSaisie?.startDate.split('T')[0]}\r\n                      max={periodeSaisie?.endDate.split('T')[0]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button type=\"button\" onClick={handleCopyWeek} className=\"copy-button\">\r\n              Copier le pattern\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                {creneaux.map(creneau => (\r\n                  <th key={creneau.id}>{creneau.label}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {dates.map(date => {\r\n                const isHighlighted = isWeekendOrHoliday(date);\r\n                const dateString = date.toISOString().split('T')[0];\r\n                return (\r\n                  <tr key={dateString} className={isHighlighted ? 'highlighted' : ''}>\r\n                    <td>{formatDate(date)}</td>\r\n                    {creneaux.map(creneau => (\r\n                      <td key={`${dateString}-${creneau.id}`}>\r\n                        {(!creneau.samediOnly || date.getDay() === 6) && (\r\n                          <select\r\n                            value={desiderata[dateString]?.[creneau.id] || ''}\r\n                            onChange={(e) => handleDesiderataChange(dateString, creneau.id, e.target.value)}\r\n                          >\r\n                            <option value=\"\">Sélectionnez</option>\r\n                            {options.map(option => (\r\n                              <option key={option} value={option}>{option}</option>\r\n                            ))}\r\n                          </select>\r\n                        )}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        \r\n        <button type=\"submit\" className=\"submit-button\">\r\n          {existingDesiderataId ? 'Mettre à jour les desiderata' : 'Soumettre les desiderata'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormulaireDesirata;","// src/components/GestionUtilisateurs.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\nimport { getAllUsers, deleteUser, getUser } from '../services/userService';\r\nimport { registerUser } from '../services/authService';\r\n\r\nfunction GestionUtilisateurs() {\r\n  const [users, setUsers] = useState([]);\r\n  const [newUser, setNewUser] = useState({ nom: '', prenom: '', email: '', role: 'medecin', password: '' });\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\r\n      if (authUser) {\r\n        try {\r\n          const userData = await getUser(authUser.uid);\r\n          if (userData.role !== 'admin') {\r\n            setError(\"Accès non autorisé\");\r\n            history.push('/');\r\n          } else {\r\n            setCurrentUser(userData);\r\n            fetchUsers();\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la récupération des données utilisateur:\", error);\r\n          setError(\"Erreur lors de la récupération des données utilisateur: \" + error.message);\r\n        }\r\n      } else {\r\n        history.push('/');\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [history]);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const fetchedUsers = await getAllUsers();\r\n      setUsers(fetchedUsers);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des utilisateurs:\", error);\r\n      setError(\"Erreur lors de la récupération des utilisateurs: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewUser(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAddUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await registerUser(newUser.email, newUser.password, {\r\n        nom: newUser.nom,\r\n        prenom: newUser.prenom,\r\n        role: newUser.role\r\n      });\r\n      alert('Utilisateur ajouté avec succès!');\r\n      setNewUser({ nom: '', prenom: '', email: '', role: 'medecin', password: '' });\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'ajout de l'utilisateur:\", error);\r\n      setError(\"Une erreur est survenue lors de l'ajout de l'utilisateur: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (uid) => {\r\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?')) {\r\n      try {\r\n        await deleteUser(uid);\r\n        alert('Utilisateur supprimé avec succès!');\r\n        fetchUsers();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression de l'utilisateur:\", error);\r\n        setError(\"Une erreur est survenue lors de la suppression de l'utilisateur: \" + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Erreur: {error}</div>;\r\n  }\r\n\r\n  if (!currentUser) {\r\n    return <div>Utilisateur non autorisé</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"gestion-utilisateurs-container\">\r\n      <h1>Gestion des Utilisateurs</h1>\r\n      <Link to=\"/dashboard-admin\">Retour au tableau de bord</Link>\r\n\r\n      <h2>Ajouter un nouvel utilisateur</h2>\r\n      <form onSubmit={handleAddUser}>\r\n        <div>\r\n          <label htmlFor=\"nom\">Nom:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nom\"\r\n            name=\"nom\"\r\n            value={newUser.nom}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"prenom\">Prénom:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"prenom\"\r\n            name=\"prenom\"\r\n            value={newUser.prenom}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={newUser.email}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Mot de passe:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={newUser.password}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"role\">Rôle:</label>\r\n          <select\r\n            id=\"role\"\r\n            name=\"role\"\r\n            value={newUser.role}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"medecin\">Médecin</option>\r\n            <option value=\"admin\">Administrateur</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Ajouter l'utilisateur</button>\r\n      </form>\r\n\r\n      <h2>Liste des utilisateurs</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Nom</th>\r\n            <th>Prénom</th>\r\n            <th>Email</th>\r\n            <th>Rôle</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => (\r\n            <tr key={user.id}>\r\n              <td>{user.nom}</td>\r\n              <td>{user.prenom}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.role}</td>\r\n              <td>\r\n                <button onClick={() => handleDeleteUser(user.id)}>Supprimer</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GestionUtilisateurs;","// src/utils/planningGenerator.js\r\nimport { getDesiderataForPeriod } from '../services/planningService';\r\nimport { getAllUsers } from '../services/userService';\r\n\r\nconst creneaux = [\r\n  { id: 'QUART_1', label: '1er QUART (1h - 7h)', medecins: 2 },\r\n  { id: 'QUART_2', label: '2ème QUART (7h - 13h)', medecins: 3 },\r\n  { id: 'RENFORT_1', label: 'RENFORT 10h / 13h', medecins: 1, samediOnly: true },\r\n  { id: 'QUART_3', label: '3ème QUART (13h - 19h)', medecins: 3 },\r\n  { id: 'RENFORT_2', label: 'RENFORT 20H / 00H', medecins: 1 },\r\n  { id: 'QUART_4', label: '4ème QUART (19h - 1h)', medecins: 3 },\r\n];\r\n\r\nconst creneauxChevauchants = {\r\n  'QUART_2': ['RENFORT_1'],\r\n  'RENFORT_1': ['QUART_2'],\r\n  'QUART_4': ['RENFORT_2'],\r\n  'RENFORT_2': ['QUART_4']\r\n};\r\n\r\nconst aCreneauxChevauchants = (medecinId, date, creneauId, planning) => {\r\n  if (!creneauxChevauchants[creneauId]) return false;\r\n  \r\n  const creneauxDuJour = planning[date];\r\n  return creneauxChevauchants[creneauId].some(creneauChevauchant => \r\n    creneauxDuJour[creneauChevauchant]?.includes(medecinId)\r\n  );\r\n};\r\n\r\nconst genererPlanning = async (debut, fin) => {\r\n  try {\r\n    const desiderataData = await getDesiderataForPeriod(debut, fin);\r\n    const users = await getAllUsers();\r\n    const medecins = users.filter(user => user.role === 'medecin').map(user => user.id);\r\n\r\n    const desiderata = {};\r\n    desiderataData.forEach(d => {\r\n      if (!desiderata[d.userId]) {\r\n        desiderata[d.userId] = {\r\n          preferences: {},\r\n          nombreGardesSouhaitees: d.nombreGardesSouhaitees,\r\n          nombreGardesMaxParSemaine: d.nombreGardesMaxParSemaine || 7,\r\n          gardesGroupees: d.gardesGroupees,\r\n          renfortsAssocies: d.renfortsAssocies\r\n        };\r\n      }\r\n      Object.entries(d.desiderata).forEach(([date, creneaux]) => {\r\n        const formattedDate = new Date(date).toISOString().split('T')[0];\r\n        if (!desiderata[d.userId].preferences[formattedDate]) {\r\n          desiderata[d.userId].preferences[formattedDate] = {};\r\n        }\r\n        Object.assign(desiderata[d.userId].preferences[formattedDate], creneaux);\r\n      });\r\n    });\r\n\r\n    let planning = genererPlanningSolution(debut, fin, desiderata, medecins);\r\n    planning = rechercheTabou(planning, debut, fin, desiderata, medecins);\r\n    return planning;\r\n  } catch (error) {\r\n    console.error('Erreur lors de la génération du planning:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst genererPlanningSolution = (debut, fin, desiderata, medecins) => {\r\n  const planning = {};\r\n  let currentDate = new Date(debut);\r\n  const endDate = new Date(fin);\r\n\r\n  while (currentDate <= endDate) {\r\n    const dateString = currentDate.toISOString().split('T')[0];\r\n    planning[dateString] = {};\r\n\r\n    // Générer les créneaux dans un ordre spécifique pour mieux gérer les chevauchements\r\n    const ordreCreneaux = [\r\n      'QUART_1',\r\n      'QUART_2',\r\n      'RENFORT_1',\r\n      'QUART_3',\r\n      'QUART_4',\r\n      'RENFORT_2'\r\n    ];\r\n\r\n    ordreCreneaux.forEach(creneauId => {\r\n      const creneau = creneaux.find(c => c.id === creneauId);\r\n      if (creneau && (!creneau.samediOnly || currentDate.getDay() === 6)) {\r\n        planning[dateString][creneauId] = assignerMedecins(dateString, creneau, desiderata, medecins, planning);\r\n      }\r\n    });\r\n\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n\r\n  return planning;\r\n};\r\n\r\nconst getWeekNumber = (date) => {\r\n  const d = new Date(date);\r\n  d.setHours(0, 0, 0, 0);\r\n  d.setDate(d.getDate() + 4 - (d.getDay() || 7));\r\n  const yearStart = new Date(d.getFullYear(), 0, 1);\r\n  return Math.ceil((((d - yearStart) / 86400000) + 1) / 7);\r\n};\r\n\r\nconst compterGardesParSemaine = (medecinId, date, planning) => {\r\n  const weekNumber = getWeekNumber(date);\r\n  let count = 0;\r\n\r\n  Object.entries(planning).forEach(([planningDate, creneaux]) => {\r\n    if (getWeekNumber(planningDate) === weekNumber) {\r\n      Object.values(creneaux).forEach(medecins => {\r\n        if (medecins && medecins.includes(medecinId)) {\r\n          count++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return count;\r\n};\r\n\r\nconst assignerMedecins = (date, creneau, desiderata, medecins, planning) => {\r\n  const medecinsDispo = medecins.filter(medecinId => {\r\n    const choix = desiderata[medecinId]?.preferences[date]?.[creneau.id];\r\n    const gardesParSemaine = compterGardesParSemaine(medecinId, date, planning);\r\n    const maxGardesParSemaine = desiderata[medecinId]?.nombreGardesMaxParSemaine || 7;\r\n    const aChevauchement = aCreneauxChevauchants(medecinId, date, creneau.id, planning);\r\n\r\n    return (choix === 'Oui' || choix === 'Possible') && \r\n           gardesParSemaine < maxGardesParSemaine &&\r\n           !aChevauchement;\r\n  });\r\n\r\n  const medecinsPriorises = medecinsDispo.sort((a, b) => {\r\n    const choixA = desiderata[a]?.preferences[date]?.[creneau.id];\r\n    const choixB = desiderata[b]?.preferences[date]?.[creneau.id];\r\n    if (choixA === 'Oui' && choixB !== 'Oui') return -1;\r\n    if (choixB === 'Oui' && choixA !== 'Oui') return 1;\r\n    return 0;\r\n  });\r\n\r\n  const assignes = [];\r\n  for (let i = 0; i < creneau.medecins; i++) {\r\n    if (medecinsPriorises.length > 0) {\r\n      const medecinChoisi = choisirMedecin(medecinsPriorises, date, creneau, desiderata, planning);\r\n      if (medecinChoisi) {\r\n        assignes.push(medecinChoisi);\r\n        medecinsPriorises.splice(medecinsPriorises.indexOf(medecinChoisi), 1);\r\n      } else {\r\n        assignes.push(null);\r\n      }\r\n    } else {\r\n      assignes.push(null);\r\n    }\r\n  }\r\n\r\n  return assignes;\r\n};\r\n\r\nconst choisirMedecin = (medecinsDispo, date, creneau, desiderata, planning) => {\r\n  const mois = new Date(date).getMonth();\r\n  const medecinsPriorises = medecinsDispo.sort((a, b) => {\r\n    const scoreA = calculerScoreMedecin(a, date, creneau, desiderata, planning, mois);\r\n    const scoreB = calculerScoreMedecin(b, date, creneau, desiderata, planning, mois);\r\n    return scoreB - scoreA;\r\n  });\r\n\r\n  return medecinsPriorises[0];\r\n};\r\n\r\nconst calculerScoreMedecin = (medecinId, date, creneau, desiderata, planning, mois) => {\r\n  let score = 0;\r\n  const prefMedecin = desiderata[medecinId];\r\n  const gardesParSemaine = compterGardesParSemaine(medecinId, date, planning);\r\n  const maxGardesParSemaine = prefMedecin?.nombreGardesMaxParSemaine || 7;\r\n\r\n  // Pénalité forte pour les chevauchements\r\n  if (aCreneauxChevauchants(medecinId, date, creneau.id, planning)) {\r\n    score -= 50;\r\n  }\r\n\r\n  // Pénalité forte si proche du max de gardes par semaine\r\n  if (gardesParSemaine >= maxGardesParSemaine - 1) {\r\n    score -= 10;\r\n  }\r\n\r\n  // Respect des préférences\r\n  if (prefMedecin.preferences[date]?.[creneau.id] === 'Oui') score += 3;\r\n  else if (prefMedecin.preferences[date]?.[creneau.id] === 'Possible') score += 1;\r\n  else if (prefMedecin.preferences[date]?.[creneau.id] === 'Non') score -= 5;\r\n\r\n  // Nombre de gardes souhaitées\r\n  const gardesDuMois = compterGardesMois(medecinId, planning, mois);\r\n  if (gardesDuMois < prefMedecin.nombreGardesSouhaitees) score += 2;\r\n  else score -= (gardesDuMois - prefMedecin.nombreGardesSouhaitees) * 2;\r\n\r\n  // Gardes groupées\r\n  if (prefMedecin.gardesGroupees && estWeekEnd(date) && aGardeWeekEnd(medecinId, date, planning)) {\r\n    score += 2;\r\n  }\r\n\r\n  // Renforts associés\r\n  if (prefMedecin.renfortsAssocies) {\r\n    if (creneau.id.startsWith('RENFORT') && aGardeJour(medecinId, date, planning)) score += 2;\r\n    if (!creneau.id.startsWith('RENFORT') && aRenfortJour(medecinId, date, planning)) score += 2;\r\n  }\r\n\r\n  return score;\r\n};\r\n\r\nconst compterGardesMois = (medecinId, planning, mois) => {\r\n  return Object.entries(planning).reduce((count, [date, creneaux]) => {\r\n    if (new Date(date).getMonth() === mois) {\r\n      return count + Object.values(creneaux).flat().filter(m => m === medecinId).length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n};\r\n\r\nconst estWeekEnd = (date) => {\r\n  const jour = new Date(date).getDay();\r\n  return jour === 0 || jour === 6;\r\n};\r\n\r\nconst aGardeWeekEnd = (medecinId, date, planning) => {\r\n  const dateObj = new Date(date);\r\n  const debutWeekEnd = new Date(dateObj.setDate(dateObj.getDate() - dateObj.getDay()));\r\n  const finWeekEnd = new Date(dateObj.setDate(dateObj.getDate() - dateObj.getDay() + 6));\r\n\r\n  for (let d = new Date(debutWeekEnd); d <= finWeekEnd; d.setDate(d.getDate() + 1)) {\r\n    const dateString = d.toISOString().split('T')[0];\r\n    if (planning[dateString] && Object.values(planning[dateString]).flat().includes(medecinId)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst aGardeJour = (medecinId, date, planning) => {\r\n  return planning[date] && Object.values(planning[date]).flat().includes(medecinId);\r\n};\r\n\r\nconst aRenfortJour = (medecinId, date, planning) => {\r\n  return planning[date] && (\r\n    planning[date]['RENFORT_1']?.includes(medecinId) || \r\n    planning[date]['RENFORT_2']?.includes(medecinId)\r\n  );\r\n};\r\n\r\nconst rechercheTabou = (planning, debut, fin, desiderata, medecins, maxIterations = 1000) => {\r\n  let meilleurPlanning = planning;\r\n  let meilleurScore = evaluerPlanning(planning, desiderata);\r\n  const listeTabou = new Set();\r\n\r\n  for (let i = 0; i < maxIterations; i++) {\r\n    const voisins = genererVoisins(meilleurPlanning, medecins, desiderata);\r\n    let meilleurVoisin = null;\r\n    let meilleurScoreVoisin = -Infinity;\r\n\r\n    for (const voisin of voisins) {\r\n      const scoreVoisin = evaluerPlanning(voisin, desiderata);\r\n      if (scoreVoisin > meilleurScoreVoisin && !listeTabou.has(JSON.stringify(voisin))) {\r\n        meilleurVoisin = voisin;\r\n        meilleurScoreVoisin = scoreVoisin;\r\n      }\r\n    }\r\n\r\n    if (meilleurScoreVoisin > meilleurScore) {\r\n      meilleurPlanning = meilleurVoisin;\r\n      meilleurScore = meilleurScoreVoisin;\r\n      listeTabou.add(JSON.stringify(meilleurVoisin));\r\n      if (listeTabou.size > 50) {\r\n        listeTabou.delete(listeTabou.values().next().value);\r\n      }\r\n    }\r\n  }\r\n\r\n  return meilleurPlanning;\r\n};\r\n\r\nconst genererVoisins = (planning, medecins, desiderata) => {\r\n  const voisins = [];\r\n  const dates = Object.keys(planning);\r\n  const date = dates[Math.floor(Math.random() * dates.length)];\r\n  const creneauId = Object.keys(planning[date])[Math.floor(Math.random() * Object.keys(planning[date]).length)];\r\n  const index = Math.floor(Math.random() * planning[date][creneauId].length);\r\n\r\n  for (const medecin of medecins) {\r\n    if (!planning[date][creneauId].includes(medecin)) {\r\n      const nouveauPlanning = JSON.parse(JSON.stringify(planning));\r\n      nouveauPlanning[date][creneauId][index] = medecin;\r\n      \r\n      // Vérifier si le changement respecte toutes les contraintes\r\n      const gardesParSemaine = compterGardesParSemaine(medecin, date, nouveauPlanning);\r\n      const maxGardes = desiderata[medecin]?.nombreGardesMaxParSemaine || 7;\r\n      const aChevauchement = aCreneauxChevauchants(medecin, date, creneauId, nouveauPlanning);\r\n      if (gardesParSemaine <= maxGardes && !aChevauchement && verifierContraintes(nouveauPlanning)) {\r\n        voisins.push(nouveauPlanning);\r\n      }\r\n    }\r\n  }\r\n\r\n  const planningRetrait = JSON.parse(JSON.stringify(planning));\r\n  planningRetrait[date][creneauId][index] = null;\r\n  if (verifierContraintes(planningRetrait)) {\r\n    voisins.push(planningRetrait);\r\n  }\r\n\r\n  return voisins;\r\n};\r\n\r\nconst evaluerPlanning = (planning, desiderata) => {\r\n  let score = 0;\r\n  const gardesParMedecin = {};\r\n  const gardesParMedecinParSemaine = {};\r\n\r\n  for (const date in planning) {\r\n    for (const creneauId in planning[date]) {\r\n      for (const medecinId of planning[date][creneauId]) {\r\n        if (medecinId === null) continue;\r\n\r\n        // Compter les gardes par semaine\r\n        const semaine = getWeekNumber(date);\r\n        if (!gardesParMedecinParSemaine[medecinId]) {\r\n          gardesParMedecinParSemaine[medecinId] = {};\r\n        }\r\n        if (!gardesParMedecinParSemaine[medecinId][semaine]) {\r\n          gardesParMedecinParSemaine[medecinId][semaine] = 0;\r\n        }\r\n        gardesParMedecinParSemaine[medecinId][semaine]++;\r\n\r\n        // Pénalité pour dépassement du maximum de gardes par semaine\r\n        const maxGardes = desiderata[medecinId]?.nombreGardesMaxParSemaine || 7;\r\n        if (gardesParMedecinParSemaine[medecinId][semaine] > maxGardes) {\r\n          score -= 20;\r\n        }\r\n\r\n        // Pénalité pour les chevauchements\r\n        if (aCreneauxChevauchants(medecinId, date, creneauId, planning)) {\r\n          score -= 50;\r\n        }\r\n\r\n        if (!gardesParMedecin[medecinId]) gardesParMedecin[medecinId] = 0;\r\n        gardesParMedecin[medecinId]++;\r\n\r\n        const choix = desiderata[medecinId]?.preferences[date]?.[creneauId];\r\n        if (choix === 'Oui') score += 3;\r\n        else if (choix === 'Possible') score += 1;\r\n        else if (choix === 'Non') score -= 5;\r\n\r\n        // Gardes groupées\r\n        if (desiderata[medecinId]?.gardesGroupees && estWeekEnd(date) && aGardeWeekEnd(medecinId, date, planning)) {\r\n          score += 2;\r\n        }\r\n\r\n        // Renforts associés\r\n        if (desiderata[medecinId]?.renfortsAssocies) {\r\n          if (creneauId.startsWith('RENFORT') && aGardeJour(medecinId, date, planning)) score += 2;\r\n          if (!creneauId.startsWith('RENFORT') && aRenfortJour(medecinId, date, planning)) score += 2;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Évaluation du nombre de gardes souhaitées par mois\r\n  for (const medecinId in gardesParMedecin) {\r\n    const diff = Math.abs(gardesParMedecin[medecinId] - desiderata[medecinId]?.nombreGardesSouhaitees);\r\n    score -= diff * 2;\r\n  }\r\n\r\n  return score;\r\n};\r\n\r\nconst verifierContraintes = (planning) => {\r\n  const dates = Object.keys(planning).sort();\r\n  const gardesParMedecinParSemaine = {};\r\n\r\n  for (let i = 0; i < dates.length; i++) {\r\n    const date = dates[i];\r\n    const medecinsDuJour = new Set();\r\n\r\n    // Vérifier les chevauchements de créneaux\r\n    for (const creneauId in planning[date]) {\r\n      const medecins = planning[date][creneauId];\r\n      for (const medecinId of medecins) {\r\n        if (medecinId === null) continue;\r\n\r\n        if (aCreneauxChevauchants(medecinId, date, creneauId, planning)) {\r\n          return false;\r\n        }\r\n\r\n        medecinsDuJour.add(medecinId);\r\n      }\r\n    }\r\n\r\n    // Vérifier les gardes consécutives\r\n    for (const medecinId of medecinsDuJour) {\r\n      if (i >= 2) {\r\n        const hierMedecins = new Set();\r\n        const avantHierMedecins = new Set();\r\n\r\n        Object.values(planning[dates[i - 1]]).forEach(medecins => {\r\n          medecins.forEach(m => { if (m !== null) hierMedecins.add(m); });\r\n        });\r\n\r\n        Object.values(planning[dates[i - 2]]).forEach(medecins => {\r\n          medecins.forEach(m => { if (m !== null) avantHierMedecins.add(m); });\r\n        });\r\n\r\n        if (hierMedecins.has(medecinId) && avantHierMedecins.has(medecinId)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // Vérifier le nombre de gardes par semaine\r\n      const semaine = getWeekNumber(date);\r\n      if (!gardesParMedecinParSemaine[medecinId]) {\r\n        gardesParMedecinParSemaine[medecinId] = {};\r\n      }\r\n      if (!gardesParMedecinParSemaine[medecinId][semaine]) {\r\n        gardesParMedecinParSemaine[medecinId][semaine] = 0;\r\n      }\r\n      gardesParMedecinParSemaine[medecinId][semaine]++;\r\n    }\r\n  }\r\n\r\n  // Vérifier le respect du nombre maximum de gardes par semaine\r\n  for (const medecinId in gardesParMedecinParSemaine) {\r\n    for (const semaine in gardesParMedecinParSemaine[medecinId]) {\r\n      const maxGardesParSemaine = 7;  // Valeur par défaut\r\n      if (gardesParMedecinParSemaine[medecinId][semaine] > maxGardesParSemaine) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport { genererPlanning, creneaux };","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\nimport { getUser, getMedecins } from '../services/userService';\r\nimport { \r\n  getLatestPlanning, \r\n  savePlanning, \r\n  updatePlanning, \r\n  getDesiderataForPeriod, \r\n  publishPlanning, \r\n  getPublishedPlanning, \r\n  getPeriodeSaisie \r\n} from '../services/planningService';\r\nimport { genererPlanning, creneaux } from '../utils/planningGenerator';\r\nimport { createEvents } from 'ics';\r\n\r\nfunction GestionPlanning({ isAdmin = false }) {\r\n  const [periodeSaisie, setPeriodeSaisie] = useState(null);\r\n  const [planning, setPlanning] = useState(null);\r\n  const [publishedPlanning, setPublishedPlanning] = useState(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [modifie, setModifie] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [allMedecins, setAllMedecins] = useState([]);\r\n  const [desiderata, setDesiderata] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [viewMode, setViewMode] = useState('all');\r\n  const [showDesiderata, setShowDesiderata] = useState(false);\r\n  const [selectedMedecin, setSelectedMedecin] = useState(null);\r\n  \r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const authUser = auth.currentUser;\r\n        if (!authUser) {\r\n          history.push('/');\r\n          return;\r\n        }\r\n\r\n        const userData = await getUser(authUser.uid);\r\n        if (!isAdmin && userData.role !== 'medecin') {\r\n          setError(\"Accès non autorisé\");\r\n          history.push('/');\r\n          return;\r\n        } else if (isAdmin && userData.role !== 'admin') {\r\n          setError(\"Accès non autorisé\");\r\n          history.push('/');\r\n          return;\r\n        }\r\n\r\n        setCurrentUser(userData);\r\n\r\n        const periode = await getPeriodeSaisie();\r\n        if (!periode) {\r\n          setError(\"Aucune période de saisie n'a été définie\");\r\n          return;\r\n        }\r\n        setPeriodeSaisie(periode);\r\n\r\n        const medecins = await getMedecins();\r\n        setAllMedecins(medecins);\r\n\r\n        if (isAdmin) {\r\n          const latestPlanning = await getLatestPlanning();\r\n          if (latestPlanning) {\r\n            setPlanning(latestPlanning);\r\n          }\r\n          const publishedPlan = await getPublishedPlanning();\r\n          setPublishedPlanning(publishedPlan);\r\n        } else {\r\n          const publishedPlan = await getPublishedPlanning();\r\n          if (publishedPlan) {\r\n            setPlanning(publishedPlan);\r\n            setPublishedPlanning(publishedPlan);\r\n          } else {\r\n            setError(\"Aucun planning n'a été publié\");\r\n          }\r\n        }\r\n\r\n        const desiderataData = await getDesiderataForPeriod(periode.startDate, periode.endDate);\r\n        const formattedDesiderata = formatDesiderata(desiderataData);\r\n        setDesiderata(formattedDesiderata);\r\n\r\n      } catch (error) {\r\n        console.error(\"Erreur lors du chargement des données:\", error);\r\n        setError(\"Une erreur est survenue lors du chargement des données\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [history, isAdmin]);\r\n\r\n  const formatDesiderata = (desiderataData) => {\r\n    const formatted = {};\r\n    desiderataData.forEach(d => {\r\n      formatted[d.userId] = {};\r\n      Object.entries(d.desiderata).forEach(([date, creneaux]) => {\r\n        const formattedDate = new Date(date).toISOString().split('T')[0];\r\n        formatted[d.userId][formattedDate] = creneaux;\r\n      });\r\n    });\r\n    return formatted;\r\n  };\r\n\r\n  const handleMedecinChange = (date, creneau, index, value) => {\r\n    if (isAdmin && editMode) {\r\n      setPlanning(prev => {\r\n        const newPlanning = { ...prev };\r\n        if (!newPlanning.planning[date]) {\r\n          newPlanning.planning[date] = {};\r\n        }\r\n        if (!newPlanning.planning[date][creneau]) {\r\n          newPlanning.planning[date][creneau] = [];\r\n        }\r\n        newPlanning.planning[date][creneau][index] = value || null;\r\n        return newPlanning;\r\n      });\r\n      setModifie(true);\r\n    }\r\n  };\r\n\r\n  const toggleEditMode = () => {\r\n    setEditMode(!editMode);\r\n  };\r\n\r\n  const sauvegarderModifications = async () => {\r\n    try {\r\n      await updatePlanning(planning.id, planning);\r\n      setModifie(false);\r\n      alert('Planning sauvegardé avec succès!');\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la sauvegarde du planning:\", error);\r\n      setError(\"Erreur lors de la sauvegarde du planning\");\r\n    }\r\n  };\r\n\r\n  const genererOuRegenererPlanning = async () => {\r\n    if (periodeSaisie && periodeSaisie.startDate && periodeSaisie.endDate) {\r\n      try {\r\n        setLoading(true);\r\n        const newPlanningData = await genererPlanning(periodeSaisie.startDate, periodeSaisie.endDate);\r\n        if (planning && planning.id) {\r\n          const updatedPlanning = { ...planning, planning: newPlanningData };\r\n          await updatePlanning(planning.id, updatedPlanning);\r\n          setPlanning(updatedPlanning);\r\n        } else {\r\n          const savedPlanningId = await savePlanning({\r\n            planning: newPlanningData,\r\n            startDate: periodeSaisie.startDate,\r\n            endDate: periodeSaisie.endDate\r\n          });\r\n          setPlanning({ id: savedPlanningId, planning: newPlanningData });\r\n        }\r\n        setModifie(false);\r\n        alert('Planning généré avec succès!');\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la génération du planning:\", error);\r\n        setError(\"Erreur lors de la génération du planning\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setError(\"La période de saisie n'est pas définie\");\r\n    }\r\n  };\r\n\r\n  const publierPlanning = async () => {\r\n    try {\r\n      await publishPlanning(planning.id);\r\n      const updatedPublishedPlanning = await getPublishedPlanning();\r\n      setPublishedPlanning(updatedPublishedPlanning);\r\n      if (publishedPlanning) {\r\n        alert('Planning mis à jour et publié avec succès!');\r\n      } else {\r\n        alert('Planning publié avec succès!');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la publication du planning:\", error);\r\n      setError(\"Erreur lors de la publication du planning: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const getColor = (medecinId, date, creneauId) => {\r\n    const formattedDate = new Date(date).toISOString().split('T')[0];\r\n    const choix = desiderata[medecinId]?.[formattedDate]?.[creneauId];\r\n    switch(choix) {\r\n      case 'Oui':\r\n        return 'bg-green-200';\r\n      case 'Possible':\r\n        return 'bg-yellow-200';\r\n      case 'Non':\r\n        return 'bg-red-200';\r\n      default:\r\n        return 'bg-white';\r\n    }\r\n  };\r\n\r\n  const sortMedecins = (medecins, date, creneauId) => {\r\n    const formattedDate = new Date(date).toISOString().split('T')[0];\r\n    return [...medecins].sort((a, b) => {\r\n      const choixA = desiderata[a.id]?.[formattedDate]?.[creneauId] || '';\r\n      const choixB = desiderata[b.id]?.[formattedDate]?.[creneauId] || '';\r\n      const order = { 'Oui': 0, 'Possible': 1, '': 2, 'Non': 3 };\r\n      return order[choixA] - order[choixB];\r\n    });\r\n  };\r\n\r\n  const getDayOfWeek = (dateString) => {\r\n    const days = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\r\n    const date = new Date(dateString);\r\n    return days[date.getDay()];\r\n  };\r\n\r\n  const getMedecinName = (medecinId) => {\r\n    const medecin = allMedecins.find(m => m.id === medecinId);\r\n    return medecin ? `${medecin.prenom} ${medecin.nom}` : 'Non assigné';\r\n  };\r\n\r\n  const getChoixLabel = (choix) => {\r\n    switch(choix) {\r\n      case 'Oui':\r\n        return '✓';\r\n      case 'Possible':\r\n        return '?';\r\n      case 'Non':\r\n        return '✗';\r\n      default:\r\n        return '-';\r\n    }\r\n  };\r\n\r\n  const getChoixStyle = (choix) => {\r\n    switch(choix) {\r\n      case 'Oui':\r\n        return 'text-green-600 font-bold';\r\n      case 'Possible':\r\n        return 'text-yellow-600 font-bold';\r\n      case 'Non':\r\n        return 'text-red-600 font-bold';\r\n      default:\r\n        return 'text-gray-400';\r\n    }\r\n  };\r\n\r\n  const exportToICS = () => {\r\n    if (!planning || !planning.planning) return;\r\n\r\n    const events = [];\r\n    const sortedDates = Object.keys(planning.planning).sort((a, b) => new Date(a) - new Date(b));\r\n\r\n    sortedDates.forEach(date => {\r\n      creneaux.forEach(creneau => {\r\n        if (planning.planning[date][creneau.id]) {\r\n          planning.planning[date][creneau.id].forEach((medecinId, index) => {\r\n            if (medecinId === currentUser.id) {\r\n              const startDate = new Date(date);\r\n              const endDate = new Date(date);\r\n              let startHour, endHour;\r\n\r\n              switch (creneau.id) {\r\n                case 'QUART_1':\r\n                  startHour = 1;\r\n                  endHour = 7;\r\n                  break;\r\n                case 'QUART_2':\r\n                  startHour = 7;\r\n                  endHour = 13;\r\n                  break;\r\n                case 'RENFORT_1':\r\n                  startHour = 10;\r\n                  endHour = 13;\r\n                  break;\r\n                case 'QUART_3':\r\n                  startHour = 13;\r\n                  endHour = 19;\r\n                  break;\r\n                case 'RENFORT_2':\r\n                  startHour = 20;\r\n                  endHour = 24;\r\n                  break;\r\n                case 'QUART_4':\r\n                  startHour = 19;\r\n                  endHour = 25;\r\n                  break;\r\n              }\r\n\r\n              startDate.setHours(startHour, 0, 0);\r\n              endDate.setHours(endHour, 0, 0);\r\n\r\n              if (endHour === 25) {\r\n                endDate.setDate(endDate.getDate() + 1);\r\n                endDate.setHours(1, 0, 0);\r\n              }\r\n\r\n              events.push({\r\n                start: [startDate.getFullYear(), startDate.getMonth() + 1, startDate.getDate(), startDate.getHours(), startDate.getMinutes()],\r\n                end: [endDate.getFullYear(), endDate.getMonth() + 1, endDate.getDate(), endDate.getHours(), endDate.getMinutes()],\r\n                title: `Garde - ${creneau.label}`,\r\n                description: `Garde médicale - ${creneau.label}`,\r\n                location: 'Hôpital',\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    createEvents(events, (error, value) => {\r\n      if (error) {\r\n        console.error(error);\r\n        alert('Une erreur est survenue lors de la création du fichier ICS');\r\n        return;\r\n      }\r\n      const blob = new Blob([value], { type: 'text/calendar;charset=utf-8' });\r\n      const link = document.createElement('a');\r\n      link.href = URL.createObjectURL(blob);\r\n      link.download = 'gardes.ics';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Erreur: {error}</div>;\r\n  }\r\n\r\n  if (!currentUser || !periodeSaisie) {\r\n    return <div>Données non disponibles</div>;\r\n  }\r\n\r\n  const sortedDates = planning && planning.planning ? \r\n    Object.keys(planning.planning).sort((a, b) => new Date(a) - new Date(b)) : \r\n    [];\r\n\r\n  return (\r\n    <div className=\"gestion-planning-container\">\r\n      <h1>{isAdmin ? \"Gestion du Planning\" : \"Visualisation du Planning\"}</h1>\r\n      <Link to={isAdmin ? \"/dashboard-admin\" : \"/dashboard-medecin\"}>Retour au tableau de bord</Link>\r\n      \r\n      <p>Période de saisie: du {new Date(periodeSaisie.startDate).toLocaleDateString()} au {new Date(periodeSaisie.endDate).toLocaleDateString()}</p>\r\n      \r\n      {isAdmin && (\r\n        <div className=\"mb-4\">\r\n          <button onClick={genererOuRegenererPlanning} className=\"mr-2\">\r\n            {planning ? 'Régénérer le planning' : 'Générer un nouveau planning'}\r\n          </button>\r\n          <button onClick={toggleEditMode} className=\"mr-2\">\r\n            {editMode ? 'Terminer l\\'édition' : 'Modifier le planning'}\r\n          </button>\r\n          {modifie && (\r\n            <button onClick={sauvegarderModifications} className=\"mr-2\">\r\n              Sauvegarder les modifications\r\n            </button>\r\n          )}\r\n          {planning && (\r\n            <button onClick={publierPlanning} className=\"mr-2\">\r\n              {publishedPlanning ? 'Mettre à jour et publier le planning' : 'Publier le planning'}\r\n            </button>\r\n          )}\r\n          <button \r\n            onClick={() => setShowDesiderata(true)}\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          >\r\n            Voir les desiderata\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n{!isAdmin && (\r\n        <div className=\"mb-4\">\r\n          <button onClick={() => setViewMode('all')} className=\"mr-2\">Voir tout le planning</button>\r\n          <button onClick={() => setViewMode('personal')} className=\"mr-2\">Voir mes gardes</button>\r\n          <button onClick={exportToICS} className=\"mr-2\">Exporter mes gardes (ICS)</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modale des desiderata */}\r\n      {showDesiderata && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h2>Visualisation des desiderata</h2>\r\n              <button \r\n                onClick={() => setShowDesiderata(false)}\r\n                className=\"close-button\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* Sélecteur de médecin */}\r\n              <select \r\n                value={selectedMedecin || ''} \r\n                onChange={(e) => setSelectedMedecin(e.target.value)}\r\n                className=\"medecin-select\"\r\n              >\r\n                <option value=\"\">Tous les médecins</option>\r\n                {allMedecins.map(medecin => (\r\n                  <option key={medecin.id} value={medecin.id}>\r\n                    {medecin.prenom} {medecin.nom}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              {/* Tableau des desiderata */}\r\n              <div className=\"table-container\">\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Date</th>\r\n                      {!selectedMedecin && <th>Médecin</th>}\r\n                      {creneaux.map(creneau => (\r\n                        <th key={creneau.id}>{creneau.label}</th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {sortedDates.map(date => {\r\n                      const medecinsList = selectedMedecin \r\n                        ? [allMedecins.find(m => m.id === selectedMedecin)]\r\n                        : allMedecins;\r\n                      return medecinsList.map(medecin => (\r\n                        <tr key={`${date}-${medecin.id}`}>\r\n                          <td>\r\n                            {`${getDayOfWeek(date)} ${new Date(date).toLocaleDateString()}`}\r\n                          </td>\r\n                          {!selectedMedecin && (\r\n                            <td>{`${medecin.prenom} ${medecin.nom}`}</td>\r\n                          )}\r\n                          {creneaux.map(creneau => {\r\n                            if (creneau.id === 'RENFORT_1' && new Date(date).getDay() !== 6) {\r\n                              return <td key={`${date}-${creneau.id}`} className=\"text-center\">-</td>;\r\n                            }\r\n                            const choix = desiderata[medecin.id]?.[date]?.[creneau.id];\r\n                            return (\r\n                              <td \r\n                                key={`${date}-${creneau.id}`} \r\n                                className={`text-center ${getChoixStyle(choix)}`}\r\n                              >\r\n                                {getChoixLabel(choix)}\r\n                              </td>\r\n                            );\r\n                          })}\r\n                        </tr>\r\n                      ));\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {planning && planning.planning && Object.keys(planning.planning).length > 0 && (\r\n        <table className=\"planning-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              {creneaux.map(creneau => (\r\n                <th key={creneau.id}>{creneau.label}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sortedDates.map(date => (\r\n              <tr key={date}>\r\n                <td>{`${getDayOfWeek(date)} ${new Date(date).toLocaleDateString()}`}</td>\r\n                {creneaux.map(creneau => (\r\n                  <td key={`${date}-${creneau.id}`}>\r\n                    {(creneau.id !== 'RENFORT_1' || new Date(date).getDay() === 6) ? (\r\n                      (planning.planning[date][creneau.id] && planning.planning[date][creneau.id].length > 0) ? (\r\n                        planning.planning[date][creneau.id].map((medecinId, index) => {\r\n                          if (!isAdmin && viewMode === 'personal' && medecinId !== currentUser.id) {\r\n                            return null;\r\n                          }\r\n                          return (\r\n                            <div key={`${date}-${creneau.id}-${index}`}>\r\n                              {isAdmin && editMode ? (\r\n                                <select\r\n                                  value={medecinId || \"\"}\r\n                                  onChange={(e) => handleMedecinChange(date, creneau.id, index, e.target.value)}\r\n                                  className={`w-full p-1 border border-gray-300 rounded ${getColor(medecinId, date, creneau.id)}`}\r\n                                >\r\n                                  <option value=\"\">Non assigné</option>\r\n                                  {sortMedecins(allMedecins, date, creneau.id).map(medecin => (\r\n                                    <option\r\n                                      key={medecin.id}\r\n                                      value={medecin.id}\r\n                                      className={getColor(medecin.id, date, creneau.id)}\r\n                                    >\r\n                                      {`${medecin.prenom} ${medecin.nom}`}\r\n                                    </option>\r\n                                  ))}\r\n                                </select>\r\n                              ) : (\r\n                                getMedecinName(medecinId)\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })\r\n                      ) : (\r\n                        'Non assigné'\r\n                      )\r\n                    ) : (\r\n                      'N/A'\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GestionPlanning;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\nimport { getUser } from '../services/userService';\r\nimport { setPeriodeSaisie, getPeriodeSaisie } from '../services/planningService';\r\n\r\nfunction GestionPeriodeSaisie() {\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (authUser) => {\r\n      if (authUser) {\r\n        try {\r\n          const userData = await getUser(authUser.uid);\r\n          if (userData.role !== 'admin') {\r\n            setError(\"Accès non autorisé\");\r\n            history.push('/');\r\n          } else {\r\n            setCurrentUser(userData);\r\n            const periode = await getPeriodeSaisie();\r\n            if (periode) {\r\n              setStartDate(periode.startDate.split('T')[0]);\r\n              setEndDate(periode.endDate.split('T')[0]);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la récupération des données utilisateur:\", error);\r\n          setError(\"Erreur lors de la récupération des données utilisateur\");\r\n        }\r\n      } else {\r\n        history.push('/');\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [history]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await setPeriodeSaisie(startDate, endDate);\r\n      alert('Période de saisie mise à jour avec succès! Les desiderata obsolètes ont été supprimés.');\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la mise à jour de la période de saisie:\", error);\r\n      setError(\"Une erreur est survenue lors de la mise à jour de la période de saisie\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Erreur: {error}</div>;\r\n  }\r\n\r\n  if (!currentUser) {\r\n    return <div>Utilisateur non autorisé</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"gestion-periode-saisie-container\">\r\n      <h1>Gestion de la période de saisie des desiderata</h1>\r\n      <Link to=\"/dashboard-admin\">Retour au tableau de bord</Link>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"startDate\">Date de début:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"startDate\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"endDate\">Date de fin:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"endDate\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Mettre à jour la période de saisie</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GestionPeriodeSaisie;","// src/App.js\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport DashboardMedecin from './components/DashboardMedecin';\r\nimport DashboardAdmin from './components/DashboardAdmin';\r\nimport FormulaireDesirata from './components/FormulaireDesirata';\r\nimport GestionUtilisateurs from './components/GestionUtilisateurs';\r\nimport GestionPlanning from './components/GestionPlanning';\r\nimport GestionPeriodeSaisie from './components/GestionPeriodeSaisie';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/dashboard-medecin\" component={DashboardMedecin} />\r\n          <Route path=\"/dashboard-admin\" component={DashboardAdmin} />\r\n          <Route path=\"/formulaire-desirata\" component={FormulaireDesirata} />\r\n          <Route path=\"/gestion-utilisateurs\" component={GestionUtilisateurs} />\r\n          <Route path=\"/gestion-planning-admin\" render={() => <GestionPlanning isAdmin={true} />} />\r\n          <Route path=\"/visualisation-planning\" render={() => <GestionPlanning isAdmin={false} />} />\r\n          <Route path=\"/gestion-periode-saisie\" component={GestionPeriodeSaisie} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// src/index.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}